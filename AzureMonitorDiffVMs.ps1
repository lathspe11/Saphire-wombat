<#
.SYNOPSIS
    Script to report on any recent changes detected by the monitor script.
.DESCRIPTION
    This script opens the store for the latest 2 csvs generated by the AzureMonitorVMs script and does a compare.
    When it finds a difference it will output a message detailing the changes made.
    This data is stored in a csv file in a folder specified by the user. 
.PARAMETER filePath
    The path to find the store of csv files in. 
    When this parameter is supplied the folder selector is not displayed and the input used is substituted. 
.PARAMETER fromTimeStamp
    This specifies a timestamp to use as the left most item in the compare statement. 
    The program will look for files matching this timestamp
.EXAMPLE
    C:\>AzureMonitorDiffVMs.ps1 -fullPath "C:\tmp" 
    <Description of example>
    Look at the last two samples and Collect all the status of vms to store under the C:\tmp directory
.Example
    C:\>AzureMonitorDiffVMs.ps1 -fullPath "C:\tmp" -fromTimeStamp 20180731_0405
    <Description of example>
    Compare the latest result with the example found at time stamp indicated. 
    You may have a set representing your gold standard to compare the changes to.
    Note that the timestamp is limited as it is not exact, but represents a time when the script started. 
.NOTES
    Author: Dan Williams 
    Date:   July 31, 2018
#>
Param([string]$filePath,[switch]$verbose,[string]$fromTimeStamp,[string]$toTimeStamp)
#Clear
Function Select-FolderDialog {
  param([string]$Description="Select Folder",[string]$RootFolder="Desktop")

  [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") |  Out-Null

  $objForm = New-Object System.Windows.Forms.FolderBrowserDialog 
  $objForm.Rootfolder = $RootFolder
  $objForm.Description = $Description
  $Show = $objForm.ShowDialog()
  If ($Show -eq "OK")
  {
    Return $objForm.SelectedPath
  } else {
    Write-Error "Operation cancelled by user."
    exit
  }
}
if($verbose){
   $oldverbose = $VerbosePreference
   $VerbosePreference = "continue"
}
<# 
    #Azure account login 
$azureAccountName = "dwilliams3"
$azurePassword = Read-host "What's your password?" -AsSecureString

Clear

$psCred = New-Object System.Management.Automation.PSCredential($azureAccountName, $azurePassword)

Login-AzureRmAccount -Credential $psCred | out-null
#>
$Date = get-date -f _yyyyMMdd_hhmmss

if ($filePath){
  $Path = ($filePath+"\AzureMonitorVMs")
}else{
  $folder = Select-FolderDialog  # the variable contains user folder selection
  $Path = ($folder+"\AzureMonitorVMs")
}
Write-Verbose "Folder selected - $folder"
#$Path = ("Z:\Shared_Data\AzureVMMonitor"+$Date)

if ((Test-Path $Path) -ne "true") {
  $Directory = New-Item $Path -type directory
}
$Directory = $Path
Write-Verbose "Path = $Path "
Write-Verbose "Dir = $Directory"

$PublicIPAll = ""
$HostEnv = (Get-Host).PrivateData

#-----------------------------------------------------------
#         Subscriptions --- Starting of the loop
#-----------------------------------------------------------

$subsAzure = Get-AzureRmSubscription |Select-Object Name,State,Id,TenantId
$subsAzure = $subsAzure |  Where-Object {$_.State -ne "Disabled"}
$subsAzure = $subsAzure | Sort-Object @{Expression={$_.Name}; Ascending=$true}

#diff files
$LastFile = (Get-ChildItem $Path -File | Sort {$_.LastWriteTime} | select FullName -last 2)
if ($fromTimeStamp){
  #Left file matches this time stamp
  $filterString = "*" + $fromTimeStamp + "*.csv"
  $leftFile = (Get-ChildItem $Path $filterString | select FullName -last 1).FullName
  if ($toTimeStamp){
    #Right file matches this time stamp
    $filterString = "*" + $toTimeStamp + "*.csv"
    $riteFile = (Get-ChildItem $Path $filterString | select FullName -last 1).FullName
  }else {
    #Right file is the latest
    $riteFile = $LastFile[1].FullName
  }
}else {
  #Left and right are the 2 latest
  $leftFile = $LastFile[0].FullName
  $riteFile = $LastFile[1].FullName
}

Write-Verbose "Files Found = $leftFile $ritefile" 

$diffObj = Compare-Object (Get-Content $leftFile) (Get-Content $riteFile)
if ($diffObj) {
    #Send the message 
    Write-Host "Found a Change in Subscriptions " -BackgroundColor DarkRed -ForegroundColor Yellow
    foreach ($diff in $diffObj) {
        if ($diff.SideIndicator -eq "=>"){
            Write-Host "Changed too  - $($diff.InputObject)" -BackgroundColor DarkRed -ForegroundColor Yellow 
        }else {
            Write-Host "Changed from - $($diff.InputObject)" -BackgroundColor DarkRed -ForegroundColor Yellow 
        }
    }
}
#exit #For Flag and date stamp Tests 

$n = 0
<###########################################################
###########################################################
###########################################################
#    Lines with # at the End to stop looping out between massive ####'ing
###########################################################>

ForEach ($subAzure in $subsAzure) {
  if ($subsAzure[$n].State -eq "Enabled") {
    $SubName = $subsAzure[$n].Name
    $n ++                                  #
    $y = 0
    if ((Test-Path ($Directory + "\" +$SubName )) -ne "true") {
      #New-Item ($Directory + "\" +$SubName ) -type directory
      $DirectorySubName = $Directory + "\" +$SubName 
      Write-Error "Directory is missing to test. $DirectorySubName"
      exit
    }
    $Path = $Directory + "\" + $SubName
    Write-Verbose "DirectorySubName = $Path"
   
    #fullPath = $DirectorySubName + "\VmStats_"+ $Date +".csv"
    #CSV Exports VmStats
    <#diff files
    #
    $LastVMFile = (Get-ChildItem $DirectorySubName -File | Sort {$_.LastWriteTime} | select FullName -last 2)
    Write-Verbose "VMs List = $($LastVMFile[0].FullName) $($LastVMFile[1].FullName)"

    $diffObj = Compare-Object (Get-Content $LastVMFile[0].FullName) (Get-Content $LastVMFile[1].FullName)
    #>
 
    #diff files
    $LastFile = (Get-ChildItem $Path -File | Sort {$_.LastWriteTime} | select FullName -last 2)
    if ($fromTimeStamp){
      #Left file matches this time stamp
      $filterString = "*" + $fromTimeStamp + "*.csv"
      $leftFile = (Get-ChildItem $Path $filterString | select FullName -last 1).FullName
      if ($toTimeStamp){
        #Right file matches this time stamp
        $filterString = "*" + $toTimeStamp + "*.csv"
        $riteFile = (Get-ChildItem $Path $filterString | select FullName -last 1).FullName
      }else {
        #Right file is the latest
        $riteFile = $LastFile[1].FullName
      }
    }else {
      #Left and right are the 2 latest
      $leftFile = $LastFile[0].FullName
      $riteFile = $LastFile[1].FullName
    }

    Write-Verbose "VMs Lists = $leftFile $ritefile" 

    $diffObj = Compare-Object (Get-Content $leftFile) (Get-Content $riteFile)
    if ($diffObj) {
      #Send the message 
      Write-Host "Found a VM Set diff " -BackgroundColor DarkRed -ForegroundColor Yellow
      foreach ($diff in $diffObj) {
        if ($diff.SideIndicator -eq "=>"){
            Write-Host "Changed too  - $($diff.InputObject)" -BackgroundColor DarkRed -ForegroundColor Yellow
        }else {
            Write-Host "Changed from - $($diff.InputObject)" -BackgroundColor DarkRed -ForegroundColor Yellow
        }
      }
    }else {
      Write-Verbose "No Diff in $DirectorySubName"
    }
  }
}
$scptName = $MyInvocation.MyCommand.Name 
Write-Verbose "$scptName completed"
$VerbosePreference = $oldverbose